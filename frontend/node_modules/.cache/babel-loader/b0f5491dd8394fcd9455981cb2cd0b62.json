{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/fullstack-practice/groceriest/src/components/Item.js\",\n    _s = $RefreshSig$();\n\nimport { SimpleGrid, Box, Text, Button, Center, Heading } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../api/index\";\nimport DarkMode from \"./DarkMode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = () => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n  const getAllItems = async () => {\n    await API.getItems().then(response => {\n      console.log(response.data);\n      setItems(response.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleDelete = id => {\n    API.deleteItem(id).then(res => {\n      getAllItems();\n    });\n  }; // const handleAddItem = (newItem) => {\n  //     API.createNewItem({\n  //         name: newItem.name,\n  //         quantity: newItem.quantity,\n  //         price: newItem.price\n  //     })\n  //     .then((res) => {\n  //         getAllItems();\n  //     })\n  //     .catch((err => {\n  //         console.log(err);\n  //     }))\n  // }\n\n\n  useEffect(() => {\n    getAllItems();\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DarkMode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Grocery list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        margin: 2,\n        colorScheme: \"cyan\",\n        variant: \"outline\",\n        onClick: true,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: {\n        sm: 1,\n        md: 3\n      },\n      margin: 5,\n      padding: 5,\n      spacingX: \"40px\",\n      spacingY: \"20px\",\n      children: items ? items.map(item => /*#__PURE__*/_jsxDEV(Box, {\n        boxShadow: \"dark-lg\",\n        rounded: \"md\",\n        boxSize: \"100%\",\n        height: 150,\n        width: 80,\n        padding: 5,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: item.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: item.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            margin: 2,\n            colorScheme: \"cyan\",\n            variant: \"outline\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              margin: 2,\n              colorScheme: \"cyan\",\n              variant: \"outline\",\n              onClick: () => handleDelete(item),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 55\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Item, \"xREny7ok4CBY6fLYzjA2kQHoW1c=\", false, function () {\n  return [useHistory];\n});\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/fullstack-practice/groceriest/src/components/Item.js"],"names":["SimpleGrid","Box","Text","Button","Center","Heading","useEffect","useState","useHistory","API","DarkMode","Item","items","setItems","isLoading","setIsLoading","history","getAllItems","getItems","then","response","console","log","data","catch","err","handleDelete","id","deleteItem","res","sm","md","map","item","name","quantity","price"],"mappings":"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","sourcesContent":["import { SimpleGrid, Box, Text, Button, Center, Heading } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../api/index\";\nimport DarkMode from \"./DarkMode\";\n\n\nconst Item = () => {\n\n    const [items, setItems] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const history = useHistory();\n\n    const getAllItems = async () => {\n        await API.getItems()\n            .then(response => {\n                console.log(response.data);\n                setItems(response.data);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    const handleDelete = (id) => {\n        API.deleteItem(id)\n            .then((res) => {\n                getAllItems();\n            })\n    }\n\n    // const handleAddItem = (newItem) => {\n    //     API.createNewItem({\n    //         name: newItem.name,\n    //         quantity: newItem.quantity,\n    //         price: newItem.price\n    //     })\n    //     .then((res) => {\n    //         getAllItems();\n    //     })\n    //     .catch((err => {\n    //         console.log(err);\n    //     }))\n    // }\n\n    useEffect(() => {\n        getAllItems();\n    }, [isLoading]);\n\n    return (\n        <div>\n            <DarkMode />\n            <Center>\n                <Heading\n                >Grocery list</Heading>\n            </Center>\n            <Center>\n            <Button\n                    margin={2}\n                    colorScheme=\"cyan\"\n                    variant=\"outline\"\n                    onClick\n                >Add Item</Button>\n            </Center>\n\n            <SimpleGrid\n                columns={{ sm: 1, md: 3 }}\n                margin={5}\n                padding={5}\n                spacingX=\"40px\" spacingY=\"20px\"\n            >\n                {items ? (\n                    items.map(item => (\n                        <Box\n                            boxShadow=\"dark-lg\"\n                            rounded=\"md\"\n                            boxSize=\"100%\"\n                            height={150}\n                            width={80}\n                            padding={5}\n                            key={item.id}>\n\n                            <Text>\n                                {item.name}\n                            </Text>\n                            <Text>{item.quantity}</Text>\n                            <Text>{item.price}</Text>\n                            <Center>\n                                <Button\n                                    margin={2}\n                                    colorScheme=\"cyan\"\n                                    variant=\"outline\"\n                                >Update</Button><span><Button\n                                    margin={2}\n                                    colorScheme=\"cyan\"\n                                    variant=\"outline\"\n                                    onClick={() => handleDelete(item)}\n                                >Delete</Button></span>\n                            </Center>\n                        </Box>\n                    ))\n                ) : (\n                    <div>Loading</div>\n                )}\n\n            </SimpleGrid>\n        </div>\n    )\n\n}\n\nexport default Item;"]},"metadata":{},"sourceType":"module"}