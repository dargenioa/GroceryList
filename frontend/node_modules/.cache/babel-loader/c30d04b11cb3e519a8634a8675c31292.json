{"ast":null,"code":"var _jsxFileName = \"/Users/amandadargenio/java-react/fullstack-practice/groceriest/src/components/Item.js\",\n    _s = $RefreshSig$();\n\nimport { SimpleGrid, Box, Text, Button, Center, Heading } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport API from \"../api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = () => {\n  _s();\n\n  const [items, setItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getAllItems = async () => {\n    await API.getItems().then(response => {\n      console.log(response.data);\n      setItems(response.data);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleDelete = id => {\n    API.deleteItem(id).then(res => {\n      getAllItems();\n    });\n  }; //     //src/components/Item.js\n  //   Line 20:15:  Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n  //   useEffect(() => {\n  //     async function fetchData() {\n  //       // You can await here\n  //       const response = await MyAPI.getData(someId);\n  //       // ...\n  //     }\n  //     fetchData();\n  //   }, [someId]); // Or [] if effect doesn't need props or state\n\n\n  useEffect(() => {\n    getAllItems();\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"Grocery list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      margin: 2,\n      colorScheme: \"cyan\",\n      variant: \"outline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: 2,\n      margin: 10,\n      spacingX: \"40px\",\n      spacingY: \"20px\",\n      children: items ? items.map(item => /*#__PURE__*/_jsxDEV(Box, {\n        boxShadow: \"dark-lg\",\n        rounded: \"md\",\n        boxSize: \"100%\",\n        height: 150,\n        width: 80,\n        padding: 5,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: item.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: item.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            margin: 2,\n            colorScheme: \"cyan\",\n            variant: \"outline\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              margin: 2,\n              colorScheme: \"cyan\",\n              variant: \"outline\",\n              onClick: () => handleDelete(item),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Item, \"mcrZo4YemGCEUcnbKDFRdh7WECQ=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/Users/amandadargenio/java-react/fullstack-practice/groceriest/src/components/Item.js"],"names":["SimpleGrid","Box","Text","Button","Center","Heading","useEffect","useState","API","Item","items","setItems","isLoading","setIsLoading","getAllItems","getItems","then","response","console","log","data","catch","err","handleDelete","id","deleteItem","res","map","item","name","quantity","price"],"mappings":"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","sourcesContent":["import { SimpleGrid, Box, Text, Button, Center, Heading } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport API from \"../api/index\";\n\n\nconst Item = () => {\n\n    const [items, setItems] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const getAllItems = async () => {\n        await API.getItems()\n            .then(response => {\n                console.log(response.data);\n                setItems(response.data);\n                setIsLoading(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    const handleDelete = (id) => {\n        API.deleteItem(id)\n        .then((res) => {\n            getAllItems();\n        })\n    }\n    //     //src/components/Item.js\n    //   Line 20:15:  Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\n    //   useEffect(() => {\n    //     async function fetchData() {\n    //       // You can await here\n    //       const response = await MyAPI.getData(someId);\n    //       // ...\n    //     }\n    //     fetchData();\n    //   }, [someId]); // Or [] if effect doesn't need props or state\n\n    useEffect(() => {\n        getAllItems();\n    }, [isLoading]);\n\n    return (\n        <div>\n            <Heading>Grocery list</Heading>\n            <Button\n            margin={2}\n            colorScheme=\"cyan\"\n            variant=\"outline\"\n            ></Button>\n            <SimpleGrid\n                columns={2}\n                margin={10}\n                spacingX=\"40px\" spacingY=\"20px\"\n            >\n                {items ? (\n                    items.map(item => (\n                        <Box\n                            boxShadow=\"dark-lg\"\n                            rounded=\"md\"\n                            boxSize=\"100%\"\n                            height={150}\n                            width={80}\n                            padding={5}\n                            key={item.id}>\n\n                            <Text>\n                                {item.name}\n                            </Text>\n                            <Text>{item.quantity}</Text>\n                            <Text>{item.price}</Text>\n                            <Center>\n                            <Button\n                            margin={2}\n                            colorScheme=\"cyan\"\n                            variant=\"outline\"\n                            >Update</Button><span><Button\n                            margin={2}\n                            colorScheme=\"cyan\"\n                            variant=\"outline\"\n                            onClick={() => handleDelete(item)}\n                            >Delete</Button></span>\n                            </Center>\n                        </Box>\n                    ))\n                ) : (\n                    <div>Loading</div>\n                )}\n\n            </SimpleGrid>\n        </div>\n    )\n\n}\n\nexport default Item;"]},"metadata":{},"sourceType":"module"}